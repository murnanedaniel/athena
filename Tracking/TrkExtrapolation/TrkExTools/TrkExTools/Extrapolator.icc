/*
   Copyright (C) 2002-2020 CERN for the benefit of the ATLAS collaboration
 */
namespace Trk {

inline const TrackingGeometry*
Extrapolator::trackingGeometry() const
{
  if (m_navigator){
    return m_navigator->trackingGeometry(Gaudi::Hive::currentContext());
  }
  return nullptr;
}

inline const IPropagator*
Extrapolator::subPropagator(const Trk::TrackingVolume& tvol) const
{
  const IPropagator* currentPropagator =
    (tvol.geometrySignature() < m_subPropagators.size())
      ? m_subPropagators[tvol.geometrySignature()]
      : nullptr;

  if (tvol.geometrySignature() == Trk::Calo && m_useDenseVolumeDescription) {
    currentPropagator =
      (Trk::MS < m_subPropagators.size()) ? m_subPropagators[Trk::MS] : nullptr;
  }
  if (!currentPropagator) {
    ATH_MSG_ERROR(
      "[!] Configuration problem: no Propagator found for volumeSignature: "
      << tvol.geometrySignature());
  }
  return currentPropagator;
}

inline const IMaterialEffectsUpdator*
Extrapolator::subMaterialEffectsUpdator(const Trk::TrackingVolume& tvol) const
{
  return (tvol.geometrySignature() < m_subupdaters.size())
           ? m_subupdaters[tvol.geometrySignature()]
           : nullptr;
}


inline const Trk::TrackParameters*
Extrapolator::returnResult(Cache& cache,
                           const Trk::TrackParameters* result) const
{
  (void)cache;
  // call the model action on the material effect updaters
  for (unsigned int imueot = 0; imueot < m_subupdaters.size(); ++imueot) {
    m_subupdaters[imueot]->modelAction();
  }
  // return the result
  return result;
}
}
