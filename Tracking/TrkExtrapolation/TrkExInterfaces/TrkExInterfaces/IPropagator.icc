/*
  Copyright (C) 2002-2022 CERN for the benefit of the ATLAS collaboration
*/

/*
 * default implementations
 * for some methods which do NOT need
 * to be always re-implemented
 * by derived classes ...
 *
 * We need to check the design for
 * these.
 */
inline std::unique_ptr<Trk::TrackParameters>
Trk::IPropagator::propagate(const EventContext&,
                            const TrackParameters&,
                            std::vector<DestSurf>&,
                            PropDirection,
                            const MagneticFieldProperties&,
                            ParticleHypothesis,
                            std::vector<unsigned int>&,
                            double&,
                            bool,
                            bool,
                            const Trk::TrackingVolume*) const
{
  return nullptr;
}

inline std::unique_ptr<Trk::TrackParameters>
Trk::IPropagator::propagateT(const EventContext&,
                             const TrackParameters&,
                             std::vector<DestSurf>&,
                             PropDirection,
                             const MagneticFieldProperties&,
                             ParticleHypothesis,
                             std::vector<unsigned int>&,
                             PathLimit&,
                             TimeLimit&,
                             bool,
                             const Trk::TrackingVolume*,
                             std::vector<Trk::HitInfo>*&) const
{
  return nullptr;
}

inline Trk::ExtrapolationCode
Trk::IPropagator::propagate(const EventContext&,
                            Trk::ExCellCharged&,
                            Trk::TargetSurfaces&,
                            Trk::TargetSurfaceVector&) const
{
  return Trk::ExtrapolationCode::FailureConfiguration;
}

inline std::unique_ptr<Trk::TrackParameters>
Trk::IPropagator::propagateM(
  const EventContext&,
  const TrackParameters&,
  std::vector<DestSurf>&,
  PropDirection,
  const MagneticFieldProperties&,
  ParticleHypothesis,
  std::vector<unsigned int>&,
  std::vector<const Trk::TrackStateOnSurface*>*&,
  std::vector<std::pair<std::unique_ptr<Trk::TrackParameters>, int>>*,
  double&,
  bool,
  bool,
  const Trk::TrackingVolume*,
  Trk::ExtrapolationCache*) const
{
  return nullptr;
}
        // placeholder for compatibility with new interface
inline const Trk::TrackSurfaceIntersection*
Trk::IPropagator::intersectSurface(const EventContext&,
                                   const Surface&,
                                   const TrackSurfaceIntersection*,
                                   const double,
                                   const MagneticFieldProperties&,
                                   ParticleHypothesis) const
{
  return nullptr;
}
