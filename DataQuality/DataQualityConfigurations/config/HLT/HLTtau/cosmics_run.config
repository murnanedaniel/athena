# **********************************************************************
# $Id: cosmics_run.config 666100 2015-05-11 07:41:45Z dzanzi $
# **********************************************************************

#######################
# HLTtau
#######################

#######################
# Output
#######################

output top_level {
	algorithm = WorstCaseSummary

  	output HLT {
     		output TRTAU {

			output Expert {
                           output HLT_tau0_ptonly_L1TAU8 {
                              output basicVars {
                                 output HLT {
                                 }
                                 output Offline {
                                 }
                              }
                           }
                           output L1TAU8 {
                              output L1_1P {
                              }
                              output L1_MP {
                              }
                           }
			}

            		output Shifter {
                           output HLT_Efficiency {
                              output HLT_tau0_ptonly_L1TAU8 {
                                 output HLT_Efficiency_1P {
                                 }
                                 output HLT_Efficiency_MP {
                                 }
                              }
                           }	
	    		}
      		}
  	}
}


#######################
# Histogram Assessments
#######################

## input
dir HLT {
        	dir TauMon {


                        dir Expert {
                              dir basicVars {
                                 dir HLT_tau0_ptonly_L1TAU8 {
                                    dir HLT {
                                      hist hEFEt {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFEta {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFEta_vs_hEFEt {
                                        algorithm = HLT_TAU_Histogram_Not_Empty&GatherData
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFPhi {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFPhi_vs_hEFEt {
                                        algorithm = HLT_TAU_Histogram_Not_Empty&GatherData
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFPhi_vs_hEFEta {
                                        algorithm = HLT_TAU_Histogram_Not_Empty&GatherData
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFnTrack {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hEFnWideTrack {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hRNNScore {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                      hist hRNNScoreSigTrans {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/HLT
                                        display   = StatBox
                                      }
                                    }
                                    dir Offline {
                                      hist hEFEt {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFEta {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFEta_vs_hEFEt {
                                        algorithm = HLT_TAU_Histogram_Not_Empty&GatherData
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFPhi {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFPhi_vs_hEFEt {
                                        algorithm = HLT_TAU_Histogram_Not_Empty&GatherData
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFPhi_vs_hEFEta {
                                        algorithm = HLT_TAU_Histogram_Not_Empty&GatherData
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFnTrack {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hEFnWideTrack {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hRNNScore {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                      hist hRNNScoreSigTrans {
                                        algorithm = TAU_HistKolmogorovTest_MaxDist_loose
                                        output    = HLT/TRTAU/Expert/HLT_tau0_ptonly_L1TAU8/basicVars/Offline
                                        display   = StatBox
                                      }
                                    }
                                 }
                              }     

                        }

			dir Shifter {

                             dir HLT_Efficiency {
                                dir HLT_tau0_ptonly_L1TAU8 {
                                   dir HLT_Efficiency_1P {
                                     hist EffHLT_averageMU_wrt_Offline {
                                       algorithm = HLT_Tau_Chi2NDF 
                                       output    = HLT/TRTAU/Shifter/HLT_Efficiency/HLT_tau0_ptonly_L1TAU8/HLT_Efficiency_1P
                                       display   = StatBox
                                     }
                                     hist EffHLT_tauEta_wrt_Offline {
                                       algorithm = HLT_Tau_Chi2NDF
                                       output    = HLT/TRTAU/Shifter/HLT_Efficiency/HLT_tau0_ptonly_L1TAU8/HLT_Efficiency_1P
                                       display   = StatBox
                                     }
                                     hist EffHLT_tauPhi_wrt_Offline {
                                       algorithm = HLT_Tau_Chi2NDF
                                       output    = HLT/TRTAU/Shifter/HLT_Efficiency/HLT_tau0_ptonly_L1TAU8/HLT_Efficiency_1P
                                       display   = StatBox
                                     }
                                     hist EffHLT_tauPt_wrt_Offline {
                                       algorithm = HLT_Tau_Chi2NDF
                                       output    = HLT/TRTAU/Shifter/HLT_Efficiency/HLT_tau0_ptonly_L1TAU8/HLT_Efficiency_1P
                                       display   = StatBox
                                     }
                                   }
                                }
                            }
			}
                }
}

##############
# Algorithms
##############

algorithm HLT_TAU_Histogram_Not_Empty&GatherData { 
  libname = libdqm_algorithms.so
  name =  HLT_TAU_Histogram_Not_Empty&GatherData
  reference = CentrallyManagedReferences
  
} 

compositeAlgorithm HLT_TAU_Histogram_Not_Empty&GatherData {
  subalgs = GatherData,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}

algorithm TAU_HistKolmogorovTest_MaxDist_loose {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_MaxDist
  thresholds = TAU_HistKolmogorovTest_MaxDist_Threshold_loose
  MinStat = -1
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
#  reference = stream=physics_Main:HLT_TauTrigger_MainReference;HLT_TauTrigger_ExpressReference
}

compositeAlgorithm GatherData&Chi2Test {
  libnames = libdqm_algorithms.so
  subalgs = GatherData,Chi2Test_Chi2_per_NDF
}

algorithm HLT_Tau_Chi2NDF {
  name = GatherData&Chi2Test

  thresholds = Chi2_thresh

  algorithm Loose {
    thresholds = Chi2_thresh/Loose
  }

  algorithm veryLoose {
    thresholds = Chi2_thresh/veryLoose
  }

  algorithm noMatch {
    thresholds = Chi2_thresh/noMatch
  }

  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
  MinStat = 1000
}


###############
# Thresholds
###############

thresholds TAU_HistKolmogorovTest_MaxDist_Threshold {
  limits MaxDist {
    warning = 0.4
    error = 0.7
  }
}

thresholds TAU_HistKolmogorovTest_MaxDist_Threshold_loose {
  limits MaxDist {
    warning = 25.0
    error = 28.0
  }
}

thresholds Chi2_thresh   {

  limits Chi2_per_NDF {
    warning = 3.
    error = 5.
  }

  thresholds Loose {
    limits Chi2_per_NDF {
      warning = 5. 
      error = 8.
    }
  }
  
  thresholds veryLoose {
    limits Chi2_per_NDF {
      warning = 8. 
      error = 12.
    }
  }

  thresholds noMatch {
    limits Chi2_per_NDF {
      warning = 100. 
      error = 120.
    }
  }

}
